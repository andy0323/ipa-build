#!/usr/bin/env node

var shell   = require('shelljs');
var program = require('commander');
var version = require("../package.json").version;
var utils   = require("../lib/utils")
var appParser = require('app-parser');

Array.prototype.contain = function(obj) { return this.indexOf(obj) !== -1;}

program
  .version(version)
    .usage(" ipa-build xcodeproj_path")
    .option('-v, --verbose', '打印详细日志')
    .option('-o, --output [output]', '指定ipa输出路径')
  .parse(process.argv);


// 是否打印
var _verbose = program.verbose;
utils.verbose = _verbose;

// 输出ipa路径
var output   = program.output;

var iosParser = appParser.iosParser;

// 判断参数输入
var args = program.args;
if (args.length != 1) {
    console.log('请输入搜索文件夹路径');  
};

// 搜索文件路径
var searchPath = args[0];
var projectPath = iosParser.getProjectPath(searchPath);

if (projectPath == 'DEFINE_ERROR') {
    console.log('请确认您输入的项目路径是否正确..');
    return;
};

// 解析所有参数，设置默认参数
var arr = projectPath.split('/');

var proj_name  = arr.pop().split('.')[0];
var fold_path  = arr.join('/');
var build_path = shell.pwd() + '/ipa-build-path';
var app_path   = build_path + '/' + proj_name + '.app';
var ipa_path   = build_path + '/' + proj_name + '.ipa';

// 通过用户的输入, 重新设置配置项
if (program.output) {
  ipa_path = output;
}

utils.log('项目名称='       +    proj_name);
utils.log('文件夹路径='     +    fold_path);
utils.log('输出文件路径='    +   build_path);
utils.log('编译包路径='     +    app_path);
utils.log('安装包输出路径='  +    ipa_path);

// 运行程序
require('../index')(projectPath, ipa_path, build_path, proj_name, app_path);